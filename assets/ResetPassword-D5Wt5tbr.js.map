{"version":3,"file":"ResetPassword-D5Wt5tbr.js","sources":["../../src/pages/ResetPassword.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport { ArrowLeft, Lock, Eye, EyeOff, CheckCircle } from \"lucide-react\";\nimport ScrollReveal from '@/components/ScrollReveal';\n\nexport default function ResetPassword() {\n  const [searchParams] = useSearchParams();\n  const token = searchParams.get('token');\n  const [formData, setFormData] = useState({\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!token) {\n      navigate('/forgot-password');\n    }\n  }, [token, navigate]);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError(\"\");\n\n    // Validation\n    if (formData.password !== formData.confirmPassword) {\n      setError(\"Passwords do not match\");\n      setIsLoading(false);\n      return;\n    }\n\n    if (formData.password.length < 6) {\n      setError(\"Password must be at least 6 characters long\");\n      setIsLoading(false);\n      return;\n    }\n\n    try {\n      const response = await fetch('/auth/reset-password', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        credentials: 'include',\n        body: JSON.stringify({ \n          token, \n          password: formData.password \n        })\n      });\n\n      if (response.ok) {\n        setIsSuccess(true);\n        setTimeout(() => {\n          navigate('/login');\n        }, 2000);\n      } else {\n        const data = await response.json();\n        setError(data.error || 'Failed to reset password');\n      }\n    } catch (err) {\n      setError('Network error. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  if (isSuccess) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-newtifi-teal/10 via-white to-newtifi-navy/5 flex items-center justify-center p-4\">\n        <div className=\"bg-white rounded-2xl shadow-2xl p-8 max-w-md w-full text-center\">\n          <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n            <CheckCircle className=\"h-8 w-8 text-green-600\" />\n          </div>\n          <h2 className=\"text-2xl font-bold text-newtifi-navy mb-2\">Password Reset Successfully</h2>\n          <p className=\"text-gray-600 mb-6\">\n            Your password has been updated. You can now sign in with your new password.\n          </p>\n          <div className=\"animate-pulse\">\n            <div className=\"h-2 bg-newtifi-teal/20 rounded-full mb-2\"></div>\n            <div className=\"h-2 bg-newtifi-teal/20 rounded-full w-3/4 mx-auto\"></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <main className=\"min-h-screen bg-white pt-[90px]\">\n      {/* Hero Section */}\n      <section className=\"relative px-6 py-32 bg-gradient-to-br from-newtifi-navy via-newtifi-navy/95 to-newtifi-teal/20 text-white overflow-hidden\">\n        {/* Background Graphics */}\n        <div className=\"absolute inset-0 bg-[url('data:image/svg+xml,%3Csvg%20width%3D%2260%22%20height%3D%2260%22%20viewBox%3D%220%200%2060%2060%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%3Cg%20fill%3D%22none%22%20fill-rule%3D%22evenodd%22%3E%3Cg%20fill%3D%22%23ffffff%22%20fill-opacity%3D%220.05%22%3E%3Ccircle%20cx%3D%2230%22%20cy%3D%2230%22%20r%3D%222%22/%3E%3C/g%3E%3C/g%3E%3C/svg%3E')] opacity-30\"></div>\n        \n        {/* Floating Geometric Shapes */}\n        <div className=\"absolute top-20 right-20 w-32 h-32 border border-white/10 rounded-full\"></div>\n        <div className=\"absolute bottom-20 left-20 w-24 h-24 bg-newtifi-teal/10 rounded-full\"></div>\n        <div className=\"absolute top-1/2 left-10 w-16 h-16 border border-white/10 transform rotate-45\"></div>\n\n        <div className=\"container mx-auto relative\">\n          <div className=\"w-full\">\n            <ScrollReveal>\n              <h1 className=\"text-2xl md:text-2xl font-light mb-10\">Reset Password</h1>\n              <div className=\"mb-10\">\n                <h2 className=\"text-2xl md:text-4xl lg:text-4xl font-extralight tracking-wider leading-tight uppercase\">\n                  Set New <span className=\"text-newtifi-teal\">Password</span>\n                </h2>\n              </div>\n              <p className=\"text-base md:text-base leading-relaxed text-white/90 font-light\">\n                Enter your new password below.\n              </p>\n            </ScrollReveal>\n          </div>\n        </div>\n      </section>\n\n      <section className=\"min-h-[calc(100vh-90px)] w-full flex items-center justify-center bg-gradient-to-br from-newtifi-navy to-newtifi-teal p-6\">\n        <div className=\"w-full max-w-md bg-white/95 rounded-3xl shadow-2xl p-8\">\n          {/* Header */}\n          <div className=\"text-center mb-8\">\n            <button\n              onClick={() => navigate('/login')}\n              className=\"absolute top-8 left-8 text-gray-500 hover:text-newtifi-navy transition-colors\"\n            >\n              <ArrowLeft className=\"h-6 w-6\" />\n            </button>\n            <div className=\"w-20 h-20 bg-newtifi-navy rounded-2xl flex items-center justify-center mx-auto mb-4\">\n              <img src=\"/assets/images/logo.png\" alt=\"NewTiFi Logo\" className=\"w-12 h-12 object-contain\" />\n            </div>\n            <h1 className=\"text-2xl font-bold text-newtifi-navy mb-2\">Reset Password</h1>\n            <p className=\"text-gray-600\">Enter your new password below.</p>\n          </div>\n\n          {/* Form */}\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\n            <div>\n              <label htmlFor=\"password\" className=\"block text-base font-medium text-gray-700 mb-2\">\n                New Password\n              </label>\n              <div className=\"relative\">\n                <Lock className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400\" />\n                <input\n                  type={showPassword ? \"text\" : \"password\"}\n                  id=\"password\"\n                  name=\"password\"\n                  value={formData.password}\n                  onChange={handleInputChange}\n                  className=\"w-full pl-10 pr-12 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-newtifi-teal focus:border-transparent transition-colors\"\n                  placeholder=\"Enter new password\"\n                  required\n                />\n                <button\n                  type=\"button\"\n                  onClick={() => setShowPassword(!showPassword)}\n                  className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600\"\n                >\n                  {showPassword ? <EyeOff className=\"h-5 w-5\" /> : <Eye className=\"h-5 w-5\" />}\n                </button>\n              </div>\n            </div>\n\n            <div>\n              <label htmlFor=\"confirmPassword\" className=\"block text-base font-medium text-gray-700 mb-2\">\n                Confirm New Password\n              </label>\n              <div className=\"relative\">\n                <Lock className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400\" />\n                <input\n                  type={showConfirmPassword ? \"text\" : \"password\"}\n                  id=\"confirmPassword\"\n                  name=\"confirmPassword\"\n                  value={formData.confirmPassword}\n                  onChange={handleInputChange}\n                  className=\"w-full pl-10 pr-12 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-newtifi-teal focus:border-transparent transition-colors\"\n                  placeholder=\"Confirm new password\"\n                  required\n                />\n                <button\n                  type=\"button\"\n                  onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                  className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600\"\n                >\n                  {showConfirmPassword ? <EyeOff className=\"h-5 w-5\" /> : <Eye className=\"h-5 w-5\" />}\n                </button>\n              </div>\n            </div>\n\n            {error && (\n              <div className=\"bg-red-50 border border-red-200 rounded-lg p-3\">\n                <p className=\"text-red-600 text-base\">{error}</p>\n              </div>\n            )}\n\n            <button\n              type=\"submit\"\n              disabled={isLoading}\n              className=\"w-full bg-newtifi-navy text-white py-3 rounded-lg font-semibold hover:bg-newtifi-teal hover:text-newtifi-navy transition-colors disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center gap-2\"\n            >\n              {isLoading ? (\n                <>\n                  <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-white\"></div>\n                  Updating...\n                </>\n              ) : (\n                \"Update Password\"\n              )}\n            </button>\n          </form>\n\n          {/* Footer */}\n          <div className=\"mt-8 text-center\">\n            <p className=\"text-base text-gray-500\">\n              Remember your password?{\" \"}\n              <button\n                onClick={() => navigate('/login')}\n                className=\"text-newtifi-teal hover:text-newtifi-navy font-medium\"\n              >\n                Sign in\n              </button>\n            </p>\n          </div>\n        </div>\n      </section>\n    </main>\n  );\n}\n\n\n\n\n"],"names":["ResetPassword","searchParams","useSearchParams","token","formData","setFormData","useState","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","isLoading","setIsLoading","isSuccess","setIsSuccess","error","setError","navigate","useNavigate","useEffect","handleInputChange","e","name","value","prev","handleSubmit","response","data","jsxDEV","CheckCircle","ScrollReveal","ArrowLeft","Lock","EyeOff","Eye","Fragment"],"mappings":"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"}