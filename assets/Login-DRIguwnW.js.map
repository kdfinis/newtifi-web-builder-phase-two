{"version":3,"file":"Login-DRIguwnW.js","sources":["../../src/lib/oauth-handler.ts","../../src/pages/Login.tsx"],"sourcesContent":["import { toast } from 'sonner';\n\nexport interface OAuthCallbackResult {\n  success: boolean;\n  provider?: string;\n  error?: string;\n  redirectTo?: string;\n}\n\n/**\n * Parse OAuth callback from URL query parameters\n */\nexport function parseOAuthCallback(): OAuthCallbackResult {\n  const params = new URLSearchParams(window.location.search);\n  \n  const auth = params.get('auth');\n  const provider = params.get('provider');\n  const error = params.get('error');\n  \n  if (auth === 'success' && provider) {\n    return {\n      success: true,\n      provider,\n      redirectTo: sessionStorage.getItem('auth_redirect') || '/dashboard'\n    };\n  }\n  \n  if (error) {\n    return {\n      success: false,\n      error: error.replace(/_/g, ' ')\n    };\n  }\n  \n  return { success: false };\n}\n\n/**\n * Handle OAuth callback and show appropriate notifications\n */\nexport function handleOAuthCallback(): OAuthCallbackResult {\n  const result = parseOAuthCallback();\n  \n  if (result.success && result.provider) {\n    const providerName = result.provider === 'google' ? 'Google' : 'LinkedIn';\n    toast.success(`Successfully signed in with ${providerName}!`);\n    \n    // Clear stored redirect\n    sessionStorage.removeItem('auth_redirect');\n    \n    // Clean URL\n    window.history.replaceState({}, document.title, result.redirectTo || window.location.pathname);\n  } else if (result.error) {\n    toast.error(`Authentication failed: ${result.error}`);\n    \n    // Clean URL\n    window.history.replaceState({}, document.title, window.location.pathname);\n  }\n  \n  return result;\n}\n\n/**\n * Check if current page is an OAuth callback\n */\nexport function isOAuthCallback(): boolean {\n  const params = new URLSearchParams(window.location.search);\n  return params.has('auth') || params.has('error');\n}\n","import React, { useState, useEffect } from \"react\";\nimport { loginEmail, registerEmail, loginWithGoogle, loginWithLinkedIn } from '@/lib/auth';\nimport { useSimpleAuth } from '@/hooks/useSimpleAuth';\nimport { handleOAuthCallback, isOAuthCallback } from '@/lib/oauth-handler';\nimport ScrollReveal from '@/components/ScrollReveal';\n\nexport default function Login() {\n  const { login, register, isAuthenticated } = useSimpleAuth();\n  const [mode, setMode] = useState<'login' | 'signup'>('login');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // Handle OAuth callback\n  useEffect(() => {\n    if (isOAuthCallback()) {\n      handleOAuthCallback();\n    }\n  }, []);\n\n  // Redirect if already authenticated\n  if (isAuthenticated) {\n    window.location.href = '/dashboard';\n    return null;\n  }\n\n  const submit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError('');\n    setIsLoading(true);\n\n    try {\n      if (mode === 'login') {\n        const success = await login(email, password);\n        if (success) {\n          window.location.href = '/dashboard';\n        } else {\n          setError('Invalid credentials');\n        }\n      } else {\n        const success = await register(email, password, `${firstName} ${lastName}`);\n        if (success) {\n          window.location.href = '/dashboard';\n        } else {\n          setError('Registration failed');\n        }\n      }\n    } catch (err) {\n      setError('An error occurred');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-white\">\n      <div className=\"flex min-h-screen\">\n        {/* Left side - Brand section */}\n        <div className=\"hidden lg:flex lg:w-2/5 bg-gradient-to-br from-newtifi-teal to-newtifi-navy relative overflow-hidden\">\n          <div className=\"absolute inset-0 bg-black/20\"></div>\n          <div className=\"relative z-10 flex flex-col justify-center items-center text-white p-12\">\n            <div className=\"text-center max-w-md\">\n              <h1 className=\"text-4xl font-bold mb-6\">Welcome to NewTIFI</h1>\n              <p className=\"text-xl mb-8 text-gray-200\">\n                Shaping the Future of Technology through Innovation and Regulation\n              </p>\n              <div className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-6\">\n                <p className=\"text-sm text-gray-200\">\n                  Join our community of technology leaders, investors, and innovators working together to build a better future.\n                </p>\n              </div>\n            </div>\n            <div className=\"absolute bottom-8 left-8 right-8\">\n              <img \n                src=\"/images/uploads/luxembourg-skyline-golden-hour.jpg\" \n                alt=\"Luxembourg Skyline\"\n                className=\"w-full h-48 object-cover rounded-lg opacity-80\"\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* Right side - Login form */}\n        <div className=\"w-full lg:w-3/5 flex items-center justify-center p-8 pt-20\">\n          <div className=\"w-full max-w-md\">\n            <div className=\"text-center mb-8\">\n              <h2 className=\"text-3xl font-bold text-newtifi-navy mb-2\">\n                {mode === 'login' ? 'Welcome Back' : 'Create Account'}\n              </h2>\n              <p className=\"text-gray-600\">\n                {mode === 'login' \n                  ? 'Sign in to your NewTIFI account' \n                  : 'Join the NewTIFI community'\n                }\n              </p>\n            </div>\n\n            <div className=\"bg-white rounded-3xl shadow-2xl p-8\">\n              <div className=\"p-10 md:p-12\">\n                <p className=\"text-base text-gray-600 mb-4\">Choose a sign-in option. You can use Google or LinkedIn for a quick, secure login, or sign in with your email and password below.</p>\n\n                {/* SSO */}\n                <div className=\"grid grid-cols-1 gap-4 mb-8\">\n                  <button \n                    onClick={() => {\n                      setIsLoading(true);\n                      loginWithGoogle();\n                    }} \n                    disabled={isLoading}\n                    className=\"w-full px-6 py-4 border border-gray-200 rounded-2xl hover:bg-gray-50 text-newtifi-navy text-left text-base flex items-center gap-3 disabled:opacity-50\"\n                  >\n                    <svg className=\"w-5 h-5\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path fill=\"#EA4335\" d=\"M12 10.2v3.6h5.1c-.2 1.2-1.5 3.6-5.1 3.6-3.1 0-5.7-2.6-5.7-5.7S8.9 6 12 6c1.8 0 3 .8 3.7 1.5l2.5-2.5C16.8 3.8 14.7 3 12 3 6.9 3 2.7 7.2 2.7 12.3S6.9 21.6 12 21.6c6.9 0 9.3-4.8 9.3-7.2 0-.5 0-1-.1-1.2H12z\"/><path fill=\"#34A853\" d=\"M3.9 7.4l3 2.2C7.7 8 9.7 6.6 12 6.6c1.8 0 3 .8 3.7 1.5l2.5-2.5C16.8 3.8 14.7 3 12 3 8.6 3 5.6 4.9 3.9 7.4z\"/><path fill=\"#FBBC05\" d=\"M12 21.6c3.2 0 5.9-1.1 7.9-3.1l-3.3-2.7c-1 .7-2.3 1.2-4.6 1.2-3.6 0-6.7-2.4-7.7-5.7l-3.3 2.6C3.8 18.7 7.6 21.6 12 21.6z\"/><path fill=\"#4285F4\" d=\"M21.3 14.4c.1-.5.1-1 .1-1.6 0-.6 0-1.1-.1-1.6H12v3.2h9.3z\"/></svg>\n                    <span>{isLoading ? 'Redirecting...' : 'Continue with Google'}</span>\n                  </button>\n                  <button \n                    onClick={() => {\n                      setIsLoading(true);\n                      loginWithLinkedIn();\n                    }} \n                    disabled={isLoading}\n                    className=\"w-full px-6 py-4 rounded-2xl bg-newtifi-navy text-white hover:bg-newtifi-navy/90 text-left text-base flex items-center gap-3 disabled:opacity-50\"\n                  >\n                    <svg className=\"w-5 h-5\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path fill=\"#0A66C2\" d=\"M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.036-1.85-3.036-1.853 0-2.136 1.446-2.136 2.941v5.664H9.354V9h3.414v1.561h.049c.476-.9 1.637-1.85 3.368-1.85 3.602 0 4.268 2.37 4.268 5.455v6.286zM5.337 7.433a2.062 2.062 0 11.001-4.124 2.062 2.062 0 01-.001 4.124zM7.114 20.452H3.56V9h3.554v11.452z\"/></svg>\n                    <span>{isLoading ? 'Redirecting...' : 'Continue with LinkedIn'}</span>\n                  </button>\n                </div>\n\n                <div className=\"relative my-6\">\n                  <div className=\"absolute inset-0 flex items-center\"><div className=\"w-full border-t border-gray-200\"/></div>\n                  <div className=\"relative flex justify-center text-sm\"><span className=\"px-2 bg-white text-gray-500\">Or continue with email</span></div>\n                </div>\n\n                {/* Email/Password Form */}\n                <form onSubmit={submit} className=\"space-y-4\">\n                  {mode === 'signup' && (\n                    <div className=\"grid grid-cols-2 gap-4\">\n                      <div>\n                        <label htmlFor=\"firstName\" className=\"block text-sm font-medium text-gray-700 mb-1\">First Name</label>\n                        <input\n                          id=\"firstName\"\n                          type=\"text\"\n                          value={firstName}\n                          onChange={(e) => setFirstName(e.target.value)}\n                          required={mode === 'signup'}\n                          className=\"w-full px-4 py-3 border border-gray-200 rounded-xl focus:ring-2 focus:ring-newtifi-teal focus:border-transparent\"\n                          placeholder=\"John\"\n                        />\n                      </div>\n                      <div>\n                        <label htmlFor=\"lastName\" className=\"block text-sm font-medium text-gray-700 mb-1\">Last Name</label>\n                        <input\n                          id=\"lastName\"\n                          type=\"text\"\n                          value={lastName}\n                          onChange={(e) => setLastName(e.target.value)}\n                          required={mode === 'signup'}\n                          className=\"w-full px-4 py-3 border border-gray-200 rounded-xl focus:ring-2 focus:ring-newtifi-teal focus:border-transparent\"\n                          placeholder=\"Doe\"\n                        />\n                      </div>\n                    </div>\n                  )}\n\n                  <div>\n                    <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-1\">Email</label>\n                    <input\n                      id=\"email\"\n                      type=\"email\"\n                      value={email}\n                      onChange={(e) => setEmail(e.target.value)}\n                      required\n                      className=\"w-full px-4 py-3 border border-gray-200 rounded-xl focus:ring-2 focus:ring-newtifi-teal focus:border-transparent\"\n                      placeholder=\"john@example.com\"\n                    />\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 mb-1\">Password</label>\n                    <input\n                      id=\"password\"\n                      type=\"password\"\n                      value={password}\n                      onChange={(e) => setPassword(e.target.value)}\n                      required\n                      className=\"w-full px-4 py-3 border border-gray-200 rounded-xl focus:ring-2 focus:ring-newtifi-teal focus:border-transparent\"\n                      placeholder=\"••••••••\"\n                    />\n                  </div>\n\n                  {mode === 'login' && (\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center\">\n                        <input\n                          id=\"remember-me\"\n                          name=\"remember-me\"\n                          type=\"checkbox\"\n                          className=\"h-4 w-4 text-newtifi-teal focus:ring-newtifi-teal border-gray-300 rounded\"\n                        />\n                        <label htmlFor=\"remember-me\" className=\"ml-2 block text-sm text-gray-700\">Remember me</label>\n                      </div>\n                      <div className=\"text-sm\">\n                        <a href=\"/forgot-password\" className=\"font-medium text-newtifi-teal hover:text-newtifi-navy\">Forgot password?</a>\n                      </div>\n                    </div>\n                  )}\n\n                  {error && (\n                    <div className=\"text-red-600 text-sm text-center bg-red-50 p-3 rounded-lg\">\n                      {error}\n                    </div>\n                  )}\n\n                  <button\n                    type=\"submit\"\n                    disabled={isLoading}\n                    className=\"w-full bg-newtifi-teal text-white py-3 px-4 rounded-xl hover:bg-newtifi-navy focus:ring-2 focus:ring-newtifi-teal focus:ring-offset-2 font-medium disabled:opacity-50 disabled:cursor-not-allowed\"\n                  >\n                    {isLoading ? 'Please wait...' : (mode === 'login' ? 'Sign In' : 'Create Account')}\n                  </button>\n                </form>\n\n                <div className=\"mt-6 text-center\">\n                  <p className=\"text-sm text-gray-600\">\n                    {mode === 'login' ? \"Don't have an account? \" : \"Already have an account? \"}\n                    <button\n                      onClick={() => setMode(mode === 'login' ? 'signup' : 'login')}\n                      className=\"font-medium text-newtifi-teal hover:text-newtifi-navy\"\n                    >\n                      {mode === 'login' ? 'Sign up' : 'Sign in'}\n                    </button>\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":["parseOAuthCallback","params","auth","provider","error","handleOAuthCallback","result","providerName","toast","isOAuthCallback","Login","login","register","isAuthenticated","useSimpleAuth","mode","setMode","useState","email","setEmail","password","setPassword","firstName","setFirstName","lastName","setLastName","isLoading","setIsLoading","setError","useEffect","submit","e","jsxDEV","loginWithGoogle","loginWithLinkedIn"],"mappings":"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"}