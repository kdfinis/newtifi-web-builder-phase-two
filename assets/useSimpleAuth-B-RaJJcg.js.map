{"version":3,"file":"useSimpleAuth-B-RaJJcg.js","sources":["../../src/lib/auth.ts","../../src/hooks/useSimpleAuth.ts"],"sourcesContent":["import { urlFactory } from './urls/UrlFactory';\n\nconst BASE = '';\n\nexport async function authStatus() {\n  const res = await fetch(`${BASE}/auth/status`, { credentials: 'include' });\n  return res.json();\n}\n\nexport async function loginEmail(email: string, password: string) {\n  const res = await fetch(`${BASE}/auth/login`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    credentials: 'include',\n    body: JSON.stringify({ email, password })\n  });\n  if (!res.ok) throw new Error((await res.json()).error || 'Login failed');\n  return res.json();\n}\n\nexport async function registerEmail(email: string, password: string, name?: string) {\n  const res = await fetch(`${BASE}/auth/register`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    credentials: 'include',\n    body: JSON.stringify({ email, password, name })\n  });\n  if (!res.ok) throw new Error((await res.json()).error || 'Registration failed');\n  return res.json();\n}\n\nexport async function logout() {\n  const res = await fetch(`${BASE}/auth/logout`, { method: 'POST', credentials: 'include' });\n  return res.json();\n}\n\n// OAuth Functions with state parameter for security\nexport function loginWithGoogle() {\n  // Store current URL to redirect back after auth\n  sessionStorage.setItem('auth_redirect', window.location.pathname);\n  // Redirect to OAuth endpoint\n  window.location.href = urlFactory.getOAuthGoogleUrl();\n}\n\nexport function loginWithLinkedIn() {\n  // Store current URL to redirect back after auth\n  sessionStorage.setItem('auth_redirect', window.location.pathname);\n  // Redirect to OAuth endpoint\n  window.location.href = urlFactory.getOAuthLinkedInUrl();\n}\n\n// Account linking functions\nexport async function linkGoogleAccount(googleId: string) {\n  const res = await fetch(`${BASE}/api/me/link-google`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    credentials: 'include',\n    body: JSON.stringify({ googleId })\n  });\n  if (!res.ok) throw new Error((await res.json()).error || 'Failed to link Google account');\n  return res.json();\n}\n\nexport async function linkLinkedInAccount(linkedinId: string) {\n  const res = await fetch(`${BASE}/api/me/link-linkedin`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    credentials: 'include',\n    body: JSON.stringify({ linkedinId })\n  });\n  if (!res.ok) throw new Error((await res.json()).error || 'Failed to link LinkedIn account');\n  return res.json();\n}\n\nexport async function unlinkProvider(provider: 'google' | 'linkedin') {\n  const res = await fetch(`${BASE}/api/me/unlink-provider`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    credentials: 'include',\n    body: JSON.stringify({ provider })\n  });\n  if (!res.ok) throw new Error((await res.json()).error || 'Failed to unlink provider');\n  return res.json();\n}\n\n// Password reset functions\nexport async function requestPasswordReset(email: string) {\n  const res = await fetch(`${BASE}/auth/forgot-password`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    credentials: 'include',\n    body: JSON.stringify({ email })\n  });\n  if (!res.ok) throw new Error((await res.json()).error || 'Failed to request password reset');\n  return res.json();\n}\n\nexport async function resetPassword(token: string, password: string) {\n  const res = await fetch(`${BASE}/auth/reset-password`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    credentials: 'include',\n    body: JSON.stringify({ token, password })\n  });\n  if (!res.ok) throw new Error((await res.json()).error || 'Failed to reset password');\n  return res.json();\n}\n\n\n","import { useState, useEffect, useCallback } from 'react';\nimport { loginEmail, registerEmail, logout as logoutApi, authStatus } from '@/lib/auth';\n\ninterface User {\n  id: string;\n  email: string;\n  name: string;\n  role: string;\n  avatarUrl?: string;\n  bio?: string;\n  organization?: string;\n  hasGoogleAuth?: boolean;\n  hasLinkedInAuth?: boolean;\n  hasPasswordAuth?: boolean;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport function useSimpleAuth() {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  const checkAuth = useCallback(async () => {\n    try {\n      const data = await authStatus();\n      if (data.loggedIn) {\n        setUser(data.user);\n      } else {\n        setUser(null);\n      }\n    } catch (err) {\n      console.error('Auth check failed:', err);\n      setUser(null);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    checkAuth();\n  }, [checkAuth]);\n\n  const login = async (email: string, password: string): Promise<boolean> => {\n    try {\n      const result = await loginEmail(email, password);\n      if (result.ok && result.user) {\n        setUser(result.user);\n        return true;\n      }\n      return false;\n    } catch (err) {\n      console.error('Login failed:', err);\n      return false;\n    }\n  };\n\n  const register = async (email: string, password: string, name: string): Promise<boolean> => {\n    try {\n      const result = await registerEmail(email, password, name);\n      if (result.ok && result.user) {\n        setUser(result.user);\n        return true;\n      }\n      return false;\n    } catch (err) {\n      console.error('Registration failed:', err);\n      return false;\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await logoutApi();\n      setUser(null);\n      window.location.href = '/';\n    } catch (err) {\n      console.error('Logout failed:', err);\n    }\n  };\n\n  const refreshAuth = useCallback(async () => {\n    await checkAuth();\n  }, [checkAuth]);\n\n  return { \n    user, \n    loading, \n    login,\n    register,\n    logout, \n    refreshAuth,\n    isAuthenticated: !!user,\n    isAdmin: user?.role === 'ADMIN',\n    isContributor: user?.role === 'CONTRIBUTOR',\n    isMember: user?.role === 'MEMBER'\n  };\n}\n"],"names":["BASE","authStatus","loginEmail","email","password","res","registerEmail","name","logout","loginWithGoogle","urlFactory","loginWithLinkedIn","unlinkProvider","provider","useSimpleAuth","user","setUser","useState","loading","setLoading","checkAuth","useCallback","data","err","useEffect","login","result","register","logoutApi","refreshAuth"],"mappings":"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"}