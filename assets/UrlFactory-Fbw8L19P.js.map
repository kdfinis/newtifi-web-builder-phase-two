{"version":3,"file":"UrlFactory-Fbw8L19P.js","sources":["../../src/lib/urls.ts","../../src/lib/urls/UrlFactory.ts"],"sourcesContent":["// Centralized URL Configuration\n// This prevents hardcoded URLs throughout the application\n\nexport const URLS = {\n  // Development URLs\n  DEV: {\n    FRONTEND: import.meta.env.VITE_FRONTEND_URL || (typeof window !== 'undefined' ? window.location.origin : ''),\n    BACKEND: import.meta.env.VITE_BACKEND_URL || '',\n    ARCHITECTURE: import.meta.env.VITE_ARCHITECTURE_URL || '',\n  },\n  \n  // Production URLs\n  PROD: {\n    FRONTEND: import.meta.env.VITE_PROD_FRONTEND_URL || (typeof window !== 'undefined' ? window.location.origin : ''),\n    BACKEND: import.meta.env.VITE_PROD_BACKEND_URL || '',\n    ARCHITECTURE: import.meta.env.VITE_PROD_ARCHITECTURE_URL || '',\n  },\n  \n  // API Endpoints\n  API: {\n    BASE: import.meta.env.VITE_API_BASE || '/api',\n    ARTICLES: '/api/articles',\n    JOURNALS: '/api/journals',\n    AUTH: '/api/auth',\n    ADMIN: '/api/admin',\n  },\n  \n  // External Services\n  EXTERNAL: {\n    GOOGLE_AUTH: import.meta.env.VITE_GOOGLE_AUTH_URL || 'https://accounts.google.com',\n    LINKEDIN_AUTH: import.meta.env.VITE_LINKEDIN_AUTH_URL || 'https://www.linkedin.com',\n    GOOGLE_OAUTH: 'https://oauth2.googleapis.com',\n    GOOGLE_APIS: 'https://www.googleapis.com',\n    DOI_BASE: 'https://doi.org',\n  },\n  \n  // File Paths\n  ASSETS: {\n    IMAGES: '/assets/images',\n    PDFS: '/assets/pdfs',\n    DOCUMENTS: '/assets/documents',\n    GRID_PATTERN: '/assets/images/grid-pattern.svg',\n  },\n} as const;\n\n// Helper function to get current environment URLs\nexport const getCurrentUrls = () => {\n  const isDev = import.meta.env.DEV;\n  return isDev ? URLS.DEV : URLS.PROD;\n};\n\n// Helper function to build API URLs\nexport const buildApiUrl = (endpoint: string) => {\n  const urls = getCurrentUrls();\n  const base = urls.BACKEND ? `${urls.BACKEND}${URLS.API.BASE}` : `${URLS.API.BASE}`;\n  return `${base}${endpoint}`;\n};\n\n// Helper function to build asset URLs\nexport const buildAssetUrl = (path: string) => {\n  const urls = getCurrentUrls();\n  return urls.FRONTEND ? `${urls.FRONTEND}${path}` : `${path}`;\n};\n\n// Helper function to build external URLs\nexport const buildExternalUrl = (service: keyof typeof URLS.EXTERNAL, path?: string) => {\n  const baseUrl = URLS.EXTERNAL[service];\n  return path ? `${baseUrl}${path}` : baseUrl;\n};","// URL Factory - Dynamic URL generation with zero hardcoding\nimport { configManager } from '../config/ConfigManager';\nimport { URLS } from '../urls';\n\nexport class UrlFactory {\n  private static getConfig() {\n    return configManager.getConfig();\n  }\n\n  // Article URLs\n  static getArticleUrl(slug: string): string {\n    const baseUrl = configManager.getCurrentUrl();\n    return `${baseUrl}/publishing/articles/${slug}`;\n  }\n\n  // Article URL (path-only)\n  static getArticlePath(slug: string): string {\n    return `/publishing/articles/${slug}`;\n  }\n\n  // Permanent Article URLs by id (canonical)\n  static getArticlePermanentUrl(id: string): string {\n    const baseUrl = configManager.getCurrentUrl();\n    return `${baseUrl}${this.getArticlePermanentPath(id)}`;\n  }\n\n  static getArticlePermanentPath(id: string): string {\n    return `/publishing/article/${id}`;\n  }\n\n  static getArticlePdfUrl(slug: string): string {\n    const baseUrl = configManager.getCurrentUrl();\n    return `${baseUrl}/articles/${slug}.pdf`;\n  }\n\n  static getArticlePreviewUrl(slug: string): string {\n    const baseUrl = configManager.getCurrentUrl();\n    return `${baseUrl}/publishing/articles/${slug}/preview`;\n  }\n\n  // Journal URLs\n  static getJournalUrl(journalSlug: string): string {\n    const baseUrl = configManager.getCurrentUrl();\n    return `${baseUrl}/publishing/${journalSlug}`;\n  }\n\n  // Journal URL (path-only)\n  static getJournalPath(journalSlug: string): string {\n    return `/publishing/${journalSlug}`;\n  }\n\n  static getJournalArticlesUrl(journalSlug: string): string {\n    const baseUrl = configManager.getCurrentUrl();\n    return `${baseUrl}/publishing/${journalSlug}/articles`;\n  }\n\n  // Journal Articles URL (path-only)\n  static getJournalArticlesPath(journalSlug: string): string {\n    return `/publishing/${journalSlug}/articles`;\n  }\n\n  static getJournalArticleUrl(journalSlug: string, articleSlug: string): string {\n    const baseUrl = configManager.getCurrentUrl();\n    return `${baseUrl}/publishing/${journalSlug}/article/${articleSlug}`;\n  }\n\n  // Journal Article URL (path-only)\n  static getJournalArticlePath(journalSlug: string, articleSlug: string): string {\n    return `/publishing/${journalSlug}/article/${articleSlug}`;\n  }\n\n  // Main page URLs\n  static getHomeUrl(): string {\n    return configManager.getCurrentUrl();\n  }\n\n  static getPublishingUrl(): string {\n    const baseUrl = configManager.getCurrentUrl();\n    return `${baseUrl}/publishing`;\n  }\n\n  // Publishing (path-only)\n  static getPublishingPath(): string {\n    return `/publishing`;\n  }\n\n  static getContactUrl(): string {\n    const baseUrl = configManager.getCurrentUrl();\n    return `${baseUrl}/contact`;\n  }\n\n  static getMembershipUrl(): string {\n    const baseUrl = configManager.getCurrentUrl();\n    return `${baseUrl}/membership`;\n  }\n\n  static getLoginUrl(): string {\n    const baseUrl = configManager.getCurrentUrl();\n    return `${baseUrl}/login`;\n  }\n\n  // PRJ Assistant App URL\n  static getPrjAssistantUrl(): string {\n    const prjUrl = (configManager as any).getPrjUrl?.();\n    return prjUrl || 'https://prj.newtifi.org';\n  }\n\n  static getSignupUrl(): string {\n    const baseUrl = configManager.getCurrentUrl();\n    return `${baseUrl}/signup`;\n  }\n\n  static getWhoWeAreUrl(): string {\n    const baseUrl = configManager.getCurrentUrl();\n    return `${baseUrl}/who-we-are`;\n  }\n\n  static getTermsUrl(): string {\n    const baseUrl = configManager.getCurrentUrl();\n    return `${baseUrl}/terms`;\n  }\n\n  static getPrivacyUrl(): string {\n    const baseUrl = configManager.getCurrentUrl();\n    return `${baseUrl}/privacy`;\n  }\n\n  static getCookiesUrl(): string {\n    const baseUrl = configManager.getCurrentUrl();\n    return `${baseUrl}/cookies`;\n  }\n\n  static getAdminUrl(): string {\n    const baseUrl = configManager.getCurrentUrl();\n    return `${baseUrl}/admin`;\n  }\n\n  // OAuth URLs\n  static getOAuthGoogleUrl(): string {\n    const baseUrl = configManager.getCurrentUrl();\n    return `${baseUrl}/auth/google`;\n  }\n\n  static getOAuthLinkedInUrl(): string {\n    const baseUrl = configManager.getCurrentUrl();\n    return `${baseUrl}/auth/linkedin`;\n  }\n\n  static getOAuthCallbackUrl(provider: 'google' | 'linkedin'): string {\n    const baseUrl = configManager.getCurrentUrl();\n    return `${baseUrl}/auth/${provider}/callback`;\n  }\n\n  // Dashboard and Auth URLs\n  static getDashboardUrl(): string {\n    const baseUrl = configManager.getCurrentUrl();\n    return `${baseUrl}/dashboard`;\n  }\n\n  static getForgotPasswordUrl(): string {\n    const baseUrl = configManager.getCurrentUrl();\n    return `${baseUrl}/forgot-password`;\n  }\n\n  static getResetPasswordUrl(token?: string): string {\n    const baseUrl = configManager.getCurrentUrl();\n    return token ? `${baseUrl}/reset-password?token=${token}` : `${baseUrl}/reset-password`;\n  }\n\n  // Path-only versions (for routing)\n  static getDashboardPath(): string {\n    return `/dashboard`;\n  }\n\n  static getForgotPasswordPath(): string {\n    return `/forgot-password`;\n  }\n\n  static getResetPasswordPath(): string {\n    return `/reset-password`;\n  }\n\n  // Person URLs\n  static getPersonUrl(name: string): string {\n    const baseUrl = configManager.getCurrentUrl();\n    return `${baseUrl}/person/${name}`;\n  }\n\n  // API URLs\n  static getApiUrl(endpoint: string): string {\n    return configManager.getApiUrl(endpoint);\n  }\n\n  static getApiArticlesUrl(): string {\n    return this.getApiUrl('/api/articles');\n  }\n\n  static getApiJournalsUrl(): string {\n    return this.getApiUrl('/api/journals');\n  }\n\n  static getApiAdminUrl(endpoint: string): string {\n    return this.getApiUrl(`/api/admin${endpoint}`);\n  }\n\n  // Asset URLs\n  static getAssetUrl(path: string): string {\n    return configManager.getCdnUrl(path);\n  }\n\n  static getImageUrl(path: string): string {\n    return this.getAssetUrl(`/images${path}`);\n  }\n\n  static getPdfUrl(path: string): string {\n    return this.getAssetUrl(`/articles${path}`);\n  }\n\n  static getFileUrl(path: string): string {\n    return this.getAssetUrl(`/files${path}`);\n  }\n\n  // External URLs\n  static getExternalUrl(service: string, params?: Record<string, string>): string {\n    const externalUrls: Record<string, (value: string) => string> = {\n      linkedin: (profile: string) => `${URLS.EXTERNAL.LINKEDIN_AUTH}/in/${profile}`,\n      email: (address: string) => `mailto:${address}`,\n      whatsapp: (number: string) => `https://wa.me/${number}`,\n      maps: (address: string) => `https://maps.google.com/?q=${encodeURIComponent(address)}`,\n      googleMaps: (address: string) => `https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2595.8684700480477!2d6.127777315490051!3d49.611979979999995!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x47954a1c0c0c0c0c%3A0x0!2s14%20Rue%20Jean-Pierre%20Biermann%2C%201268%20Luxembourg!5e0!3m2!1sen!2slu!4v1677890257135!5m2!1sen!2slu&zoom=10`,\n      openStreetMap: (address: string) => `https://www.openstreetmap.org/?mlat=49.61650&mlon=6.16000#map=16/49.61650/6.16000`,\n      openStreetMapEmbed: (address: string) => `https://www.openstreetmap.org/export/embed.html?bbox=6.15200%2C49.61200%2C6.17000%2C49.62000&layer=mapnik&marker=49.61650%2C6.16000&scrollwheel=false&zoomControl=true&dragPan=false&touchZoom=false&doubleClickZoom=false&keyboard=false`\n    };\n\n    const urlGenerator = externalUrls[service];\n    if (!urlGenerator) {\n      throw new Error(`Unknown external service: ${service}`);\n    }\n\n    const value = params?.value || '';\n    return urlGenerator(value);\n  }\n\n  // Specific external URLs\n  static getLinkedInUrl(profile: string): string {\n    return this.getExternalUrl('linkedin', { value: profile });\n  }\n\n  static getEmailUrl(address: string): string {\n    return this.getExternalUrl('email', { value: address });\n  }\n\n  static getWhatsAppUrl(number: string): string {\n    return this.getExternalUrl('whatsapp', { value: number });\n  }\n\n  static getMapsUrl(address: string): string {\n    return this.getExternalUrl('maps', { value: address });\n  }\n\n  static getGoogleMapsEmbedUrl(): string {\n    return this.getExternalUrl('googleMaps', { value: '' });\n  }\n\n  static getOpenStreetMapUrl(): string {\n    return this.getExternalUrl('openStreetMap', { value: '' });\n  }\n\n  static getOpenStreetMapEmbedUrl(): string {\n    return this.getExternalUrl('openStreetMapEmbed', { value: '' });\n  }\n\n  // Validation helpers\n  static isValidUrl(url: string): boolean {\n    try {\n      new URL(url);\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  static sanitizeUrl(url: string): string {\n    return url.replace(/[^a-zA-Z0-9\\-._~:/?#[\\]@!$&'()*+,;=%]/g, '');\n  }\n\n  // Dev guard: log suspicious hardcoded localhost usage\n  static guard(url: string): string {\n    try {\n      // @ts-ignore\n      if (typeof window !== 'undefined' && (import.meta?.env?.DEV)) {\n        if (/^http:\\/\\/localhost:\\d+\\//.test(url)) {\n          console.warn('[UrlFactory.guard] Detected absolute localhost URL. Use UrlFactory helpers instead:', url);\n        }\n      }\n    } catch {}\n    return url;\n  }\n}\n\n// Export singleton instance\nexport const urlFactory = UrlFactory;\n"],"names":["URLS","UrlFactory","configManager","slug","id","journalSlug","articleSlug","_b","_a","provider","token","baseUrl","name","endpoint","path","service","params","urlGenerator","profile","address","number","value","url","urlFactory"],"mappings":"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"}